server.port=8081
server.servlet.context-path=/demo


#应用访问地址(需要能被认证中心正常访问)
spring.cas.server-name=http://localhost:8081/demo
#认证中心服务地址
spring.cas.cas-server-url-prefix=http://localhost:8080/cas
#认证中心登录地址
spring.cas.cas-server-login-url=${spring.cas.cas-server-url-prefix}/login
#认证中心登出地址
spring.cas.cas-server-logout-url=${spring.cas.cas-server-url-prefix}/logout
#正则表达式，定义无需认证中心拦截的地址(需要保留原登录页时使用，否则无需配置)
#spring.cas.ignore-pattern=(login|register|\.js|\.img|\.css)(\?.*)?$


#spring security 过滤器排序
spring.security.filter.order=-100
#spring security 安全过滤器责任链拦截的分发类型,也就是需要拦截哪些请求，这里面包括同步，错误，请求，转发，包含
spring.security.filter.dispatcher-types=async,error,request
#密码编码器的钥匙
#system.user.password.secret=uvwxyz
#用户相关配置
#spring.security.user.name=user
#spring.security.user.password=123456
#spring.security.user.roles=ADMIN


# 数据库访问配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/cas
spring.datasource.username=root
spring.datasource.password=root
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
spring.datasource.logSlowSql=true

